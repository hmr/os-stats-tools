#!/usr/bin/env -S nice -n 19 bash
# vim: ft=sh syn=bash ts=2 sw=2 et ff=unix fenc=utf-8

# part of os-stats-tools
# print_temp
#   Print system temperature.
#
# ORIGIN: 2020-12-23 by hmr


set -eu

trap 'exit 255' HUP QUIT TERM
trap 'echo SIGINT caught; exit 254' 2
trap 'echo SIGUSR1 caught; exit 253' USR1

_SYSTEM=$(uname -s | tr "[:upper:]" "[:lower:]")
_ARCH=$(uname -m | tr "[:upper:]" "[:lower:]")


case "${_SYSTEM}" in

  "darwin" )
    # I don't know how to obtain temperature information from macOS...
    ;;

  "linux" )
    case "${_ARCH}" in
      aarch* | riscv* )
        case "$(cat /proc/device-tree/model)" in
          "Raspberry Pi 5"* )
            _TGT=/sys/devices/virtual/thermal/thermal_zone0/temp
            if [[ -r ${_TGT} ]]; then
              printf "%s'C" "$(echo "$(cat ${_TGT}) / 1000" | bc)"
            fi

            # It's possible to get the cooling fan speed on Raspberry Pi 5
            _TGT=""
            for _TGT in /sys/class/hwmon/hwmon*/fan1_input; do
              if [[ -r ${_TGT} ]]; then
                printf " %srpm" "$(cat ${_TGT})"
              fi
            done
            ;;

          "Raspberry Pi 4"* )
            _TGT=/sys/devices/virtual/thermal/thermal_zone0/temp
            if [[ -r ${_TGT} ]]; then
              printf "%s'C" "$(echo "$(cat ${_TGT}) / 1000" | bc)"
            fi
            ;;

          "StarFive VisionFive 2"* )
            _TGT=/sys/devices/virtual/thermal/thermal_zone0/temp
            if [[ -r ${_TGT} ]]; then
              printf "%s'C" "$(echo "$(cat ${_TGT}) / 1000" | bc)"
            fi
            ;;
        esac
        ;;

      x86_64 )
        _TGT=/sys/devices/virtual/thermal/thermal_zone0/temp
        if [[ -r ${_TGT} ]]; then
          printf "%s'C" "$(echo "$(cat ${_TGT}) / 1000" | bc)"
        fi
        ;;

      i386 )
        ;;

    esac
    ;;
esac

